&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)    
	// Инициализируем параметры игрового поля
	СторонаПоля = 5; // Задаем сторону поля
	МинВсего = 5; // Задаем количество мин
	МинОсталось = МинВсего; // Инициализируем оставшиеся мины
	МинОтмечено = 0; // Инициализируем количество отмеченных мин 
	ИграЗакончена = Ложь; // Инициализируем флаг окончания игры
КонецПроцедуры

&НаСервере
Процедура НачатьИгруНаСервере()  
	// Удаляем старое игровое поле
	УдалитьИгровоеПоле(); 
	МинОтмечено = 0; // Обнуляем количество отмеченных мин
	ИграЗакончена = Ложь; // Обнуляем флаг окончания игры
	
	// Создаем новое игровое поле  
	СоздатьИгровоеПоле(); 
КонецПроцедуры  

&НаСервере
Процедура УдалитьИгровоеПоле()
	// Находим элемент игрового поля по имени
	ИгровоеПоле = Элементы.Найти("ИгровоеПоле");
	
	// Если элемент игрового поля уже существует, удаляем его
	Если ИгровоеПоле <> Неопределено Тогда  
		ЭтаФорма.Элементы.Удалить(ИгровоеПоле);	
	КонецЕсли;  
КонецПроцедуры

&НаСервере
Процедура СоздатьИгровоеПоле()
	// Создаем новое игровое поле
	ИгровоеПоле = ЭтаФорма.Элементы.Добавить("ИгровоеПоле", Тип("ГруппаФормы"), ЭтаФорма);
	ИгровоеПоле.Вид = ВидГруппыФормы.ОбычнаяГруппа; // Устанавливаем вид группы
	ИгровоеПоле.Отображение = ОтображениеОбычнойГруппы.Нет; // Скрываем группу
	ИгровоеПоле.ОтображатьЗаголовок = Ложь; // Не отображаем заголовок группы
	ИгровоеПоле.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная; // Устанавливаем горизонтальную группировку
	ИгровоеПоле.РазрешитьИзменениеСостава = Истина; // Разрешаем изменять состав группы
	ИгровоеПоле.Видимость = Истина; // Делаем группу видимой
	
	// Создаем квадратное игровое поле
	Для х = 1 По СторонаПоля Цикл 
		// Создаем группу для ряда
		ГруппаЯчейки = ЭтаФорма.Элементы.Добавить("Строка" + х, Тип("ГруппаФормы"), Элементы.ИгровоеПоле);
		ГруппаЯчейки.Вид = ВидГруппыФормы.ОбычнаяГруппа; // Устанавливаем вид группы
		ГруппаЯчейки.ВертикальноеПоложениеВГруппе = ВертикальноеПоложениеПодчиненных; // Устанавливаем вертикальное положение
		ГруппаЯчейки.Видимость = Истина; // Делаем группу видимой
		
		// Создаем кнопки для каждой ячейки в ряду
		Для у = 1 По СторонаПоля Цикл  
			КнопкаЯчейки = ЭтаФорма.Элементы.Добавить("Ячейка_" + у + "_" + х, Тип("ДекорацияФормы"), ГруппаЯчейки);
			КнопкаЯчейки.Вид = ВидДекорацииФормы.Картинка; // Устанавливаем вид кнопки
			КнопкаЯчейки.Высота = 2; // Устанавливаем высоту кнопки
			КнопкаЯчейки.Ширина = 4; // Устанавливаем ширину кнопки
			КнопкаЯчейки.Видимость = Истина; // Делаем кнопку видимой
			КнопкаЯчейки.КонтекстноеМеню.Видимость = Истина; // Включаем видимость контекстного меню
			КнопкаЯчейки.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Двойная, 3); // Устанавливаем рамку кнопки
			КнопкаЯчейки.Гиперссылка = Истина; // Устанавливаем гиперссылку
			КнопкаЯчейки.УстановитьДействие("Нажатие", "Нажать"); // Устанавливаем действие при нажатии кнопки 			
			
			ОтмеченаМина = ЭтаФорма.Элементы.Добавить("Ячейка_" + у + "_" + х + "ОтмеченаМина", 
			Тип("КнопкаФормы"), КнопкаЯчейки.КонтекстноеМеню);
			ОтмеченаМина.ИмяКоманды = "ЭтоМина"; // Устанавливаем имя команды
			ОтмеченаМина.Картинка = БиблиотекаКартинок.УстановитьФлажки; // Устанавливаем картинку для команды  
			
			УдалитьОтмеченаМина = ЭтаФорма.Элементы.Добавить("Ячейка_" + у + "_" + х + "УдалитьОтмеченаМина", 
			Тип("КнопкаФормы"), КнопкаЯчейки.КонтекстноеМеню);
			УдалитьОтмеченаМина.ИмяКоманды = "УдалитьЭтоМина"; // Устанавливаем имя команды
			УдалитьОтмеченаМина.Картинка = Новый Картинка; // Устанавливаем картинку для команды
			
			// Добавляем параметры для полей
			ПараметрЯчейки = ПараметрыПолей.Добавить();
			ПараметрЯчейки.ИмяПоля = "Ячейка_" + у + "_" + х; // Устанавливаем имя поля
			ПараметрЯчейки.Ряд = у; // Устанавливаем номер ряда
			ПараметрЯчейки.Колонка = х; // Устанавливаем номер колонки
			ПараметрЯчейки.Мина = Ложь; // Устанавливаем флаг мины
		КонецЦикла;
	КонецЦикла; 
	
	// Генератор случайных чисел для размещения мин
	ГенераторСлучайныхЧисел = Новый ГенераторСлучайныхЧисел();
	Для Счетчик = 1 По МинВсего Цикл 
		МинаПоставлена = Ложь; // Флаг, указывающий, что мина еще не поставлена
		Пока Не МинаПоставлена Цикл
			// Генерируем случайное место для мины
			СтавимМину = ГенераторСлучайныхЧисел.СлучайноеЧисло(0, ПараметрыПолей.Количество() - 1);
			х = ПараметрыПолей[СтавимМину]; // Получаем параметр поля
			// Проверяем, не стоит ли уже мина в этом месте
			Если х.Мина = Истина Тогда
				Продолжить; // Если мина уже стоит, продолжаем
			КонецЕсли;
			х.Мина = Истина; // Устанавливаем флаг мины
			Элементы[х.ИмяПоля].Заголовок = "М"; // Устанавливаем заголовок для кнопки с миной
			МинаПоставлена = Истина; // Устанавливаем флаг, что мина поставлена
		КонецЦикла; 
	КонецЦикла; 
	
	// Обновляем количество мин вокруг каждой ячейки
	Для х = 1 По СторонаПоля Цикл
		Для у = 1 По СторонаПоля Цикл
			ИмяТекущегоЭлемента = "Ячейка_" + у + "_" + х; // Формируем имя текущего элемента
			// Если в текущем элементе стоит мина, пропускаем
			Если Элементы[ИмяТекущегоЭлемента].Заголовок = "М" Тогда
				Продолжить;			
			КонецЕсли;
			МинРядом = 0; // Счетчик мин рядом
			
			// Проверяем ячейки вокруг текущей ячейки
			// Верхний левый
			ИмяЭлемента = "Ячейка_" + (у-1) + "_" + (х-1); 
			Если (у > 1) И (х > 1) И (Элементы[ИмяЭлемента].Заголовок = "М") Тогда
				МинРядом = МинРядом + 1;  
			КонецЕсли; 
			
			// Верхний
			ИмяЭлемента = "Ячейка_" + (у-1) + "_" + х; 
			Если (у > 1) И (Элементы[ИмяЭлемента].Заголовок = "М") Тогда
				МинРядом = МинРядом + 1;  
			КонецЕсли; 
			
			// Верхний правый
			ИмяЭлемента = "Ячейка_" + (у-1) + "_" + (х+1); 
			Если (у > 1) И (х < СторонаПоля) И (Элементы[ИмяЭлемента].Заголовок = "М") Тогда
				МинРядом = МинРядом + 1;  
			КонецЕсли;  
			
			// Левый
			ИмяЭлемента = "Ячейка_" + у + "_" + (х-1); 
			Если (х > 1) И (Элементы[ИмяЭлемента].Заголовок = "М") Тогда
				МинРядом = МинРядом + 1;  
			КонецЕсли;   
			
			// Правый
			ИмяЭлемента = "Ячейка_" + у + "_" + (х+1); 
			Если (х < СторонаПоля) И (Элементы[ИмяЭлемента].Заголовок = "М") Тогда
				МинРядом = МинРядом + 1;  
			КонецЕсли;  			
			
			// Нижний левый
			ИмяЭлемента = "Ячейка_" + (у+1) + "_" + (х-1); 
			Если (у < СторонаПоля) И (х > 1) И (Элементы[ИмяЭлемента].Заголовок = "М") Тогда
				МинРядом = МинРядом + 1;  
			КонецЕсли;
			
			// Нижний
			ИмяЭлемента = "Ячейка_" + (у+1) + "_" + х; 
			Если (у < СторонаПоля) И (Элементы[ИмяЭлемента].Заголовок = "М") Тогда
				МинРядом = МинРядом + 1;  
			КонецЕсли;			       		   							
			
			// Нижний правый
			ИмяЭлемента = "Ячейка_" + (у+1) + "_" + (х+1); 
			Если (у < СторонаПоля) И (х < СторонаПоля) И (Элементы[ИмяЭлемента].Заголовок = "М") Тогда
				МинРядом = МинРядом + 1;  
			КонецЕсли;  
			
			// Если рядом есть мины, устанавливаем их количество в заголовок текущей ячейки
			Если МинРядом > 0 Тогда
				Элементы[ИмяТекущегоЭлемента].Заголовок = МинРядом;			
			КонецЕсли; 		
		КонецЦикла; 		
	КонецЦикла;
КонецПроцедуры 

&НаКлиенте
Процедура Нажать(Ячейка) 
	// Проверяем, закончена ли игра
	Если ИграЗакончена = Истина Тогда
		Возврат; // Если игра закончена, не выполняем дальнейшие действия
	КонецЕсли;
	// Устанавливаем рамку для элемента при нажатии
	Ячейка.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная, 1);
	
	// Проверяем, есть ли мина в текущем элементе
	Если Ячейка.Заголовок = "М" Тогда 
		Ячейка.Картинка = БиблиотекаКартинок.Удалить; // Устанавливаем картинку "удалить"
		ОткрытьВсеМины(); // Открываем все мины
		Сообщить("Вы проиграли"); 
		ИграЗакончена = Истина;
	Иначе
		Ячейка.Картинка = Новый Картинка; // Устанавливаем пустую картинку
		Ячейка.ТекстНеВыбраннойКартинки = Ячейка.Заголовок; // Устанавливаем текст для кнопки
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НачатьИгру(Команда)
	// Запускаем серверную процедуру для начала игры
	НачатьИгруНаСервере();
	// Обновляем отображение данных на форме
	ЭтаФорма.ОбновитьОтображениеДанных(Элементы["ИгровоеПоле"]);
КонецПроцедуры

&НаКлиенте
Процедура ЭтоМина(Команда)
	// Проверяем, закончена ли игра
	Если ИграЗакончена = Истина Тогда
		Возврат; // Если игра закончена, не выполняем дальнейшие действия
	КонецЕсли;
	
	ТекущийЭлемент.Картинка = БиблиотекаКартинок.УстановитьФлажки;  // Нужна проверка на количество мин с флажком и количество оставшихся мин
	Если ТекущийЭлемент.Заголовок = "М" Тогда
		МинОтмечено = МинОтмечено + 1;
		МинОсталось = МинВсего - МинОтмечено;
		Если МинОсталось = 0 Тогда
			Сообщить("Поздравляю! Вы выиграли");	
			ИграЗакончена = Истина;
		КонецЕсли;     	
	КонецЕсли;    	
КонецПроцедуры 

&НаКлиенте
Процедура УдалитьЭтоМина(Команда)
	// Проверяем, закончена ли игра
	Если ИграЗакончена = Истина Тогда
		Возврат; // Если игра закончена, не выполняем дальнейшие действия
	КонецЕсли;
	ТекущийЭлемент.Картинка = Новый Картинка; // Устанавливаем пустую картинку
	МинОтмечено = МинОтмечено - 1; // Уменьшаем счетчик отмеченных мин 
	МинОсталось = МинВсего - МинОтмечено;  	
КонецПроцедуры

&НаСервере
Процедура ОткрытьВсеМины()
	// Открываем все мины на игровом поле
	Для х = 1 По СторонаПоля Цикл
		Для У = 1 По СторонаПоля Цикл
			ИмяТекущегоЭлемента = "Ячейка_" + у + "_" + х; // Формируем имя текущего элемента
			// Если в текущем элементе стоит мина, открываем его
			Если Элементы[ИмяТекущегоЭлемента].Заголовок = "М" Тогда    
				Элементы[ИмяТекущегоЭлемента].Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Двойная, 1); // Устанавливаем двойную рамку
				Элементы[ИмяТекущегоЭлемента].Картинка = БиблиотекаКартинок.Удалить; // Устанавливаем картинку "удалить" для мины
			КонецЕсли; 	
		КонецЦикла;   
	КонецЦикла;  
КонецПроцедуры 
